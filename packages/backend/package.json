{
  "name": "@local/back-end",
  "description": "Sample backend for GroundLevel-es-firebase",
  "license": "MIT",
  "private": true,
  "type": "module",
  "files": [
    "functions/*.js",
    "firestore.rules",
    "firestore.indexes.json"
  ],
  "engines": {
    "node": ">=13.2"
  },
  "scripts": {
    "test": "npm run ci",
    "ci": "npm run ci:seq",
    "  ": "",
    "ci:seq": "firebase emulators:exec --project=bunny --only firestore,functions \"npm run _ci_init && npm run _ci_fns && npm run _ci_rules\"",
    "_ci_init": "node test/prime-docs.js",
    "_ci_fns": "NODE_OPTIONS=--experimental-vm-modules npx jest --config test-fns/jest.config.cjs --verbose --detectOpenHandles",
    "_ci_rules": "npm run test:rules:all",
    "ci:par": "firebase emulators:exec --project=bunny --only firestore,functions \"npm run _ci_par_2\"",
    "_ci_par_2": "concurrently -n test-fns,test-rules \"npm run _ci_init && npm run _ci_fns\" \"npm run _ci_rules\"",
    "  -": "",
    "start": "concurrently -n emul,init \"firebase emulators:start --project=bunny --only functions,firestore\" \"GCLOUD_PROJECT=bunny npm run _start_2\"",
    "_start_2": "wait-on http://localhost:4000 && node test/prime-docs.js",
    "test:fns:userInfo": "GCLOUD_PROJECT=bunny NODE_OPTIONS=--experimental-vm-modules npx jest --config test-fns/jest.config.cjs -f userInfo.test.js --detectOpenHandles --all",
    "test:fns:all": "GCLOUD_PROJECT=bunny NODE_OPTIONS=--experimental-vm-modules npx jest --config test-fns/jest.config.cjs --verbose --detectOpenHandles --all",
    "  --": "",
    "test:rules:invites": "NODE_OPTIONS=--experimental-vm-modules npx jest --config test-rules/jest.config.cjs -f invitesC.test.js --verbose --detectOpenHandles --all",
    "test:rules:projects": "NODE_OPTIONS=--experimental-vm-modules npx jest --config test-rules/jest.config.cjs -f projectsC/index.test.js --verbose --detectOpenHandles --all",
    "test:rules:projectsSymbols": "NODE_OPTIONS=--experimental-vm-modules npx jest --config test-rules/jest.config.cjs -f projectsC/symbolsC.test.js --verbose --detectOpenHandles --all",
    "test:rules:projectsUserInfo": "NODE_OPTIONS=--experimental-vm-modules npx jest --config test-rules/jest.config.cjs -f projectsC/userInfoC.test.js --verbose --detectOpenHandles --all",
    "test:rules:userInfo": "NODE_OPTIONS=--experimental-vm-modules npx jest --config test-rules/jest.config.cjs -f userInfoC.test.js --verbose --detectOpenHandles --all",
    "test:rules:all": "NODE_OPTIONS=--experimental-vm-modules npx jest --config test-rules/jest.config.cjs --verbose --detectOpenHandles --all"
  },
  "//scripts": {
    "//prestart": "[[ ! -d functions/node_modules/@firebase ]] && ( >&2 echo \"ERROR: please '(cd functions && npm install)'\n\"; exit 9)",
    "//test:fns:callables": "GCLOUD_PROJECT=bunny NODE_OPTIONS=--experimental-vm-modules npx jest --config test-fns/jest.config.cjs -f callables.test.js",
    "//_check_npx7": "if [[ $(npx --version) < '7.' ]]; then ( >&2 echo \"ERROR: Need npx >= 7.x.\n\"); exit 1; fi"
  },
  "devDependencies": {
    "@local/functions": "file:functions",
    "concurrently": "^5.3.0",
    "firebase-admin": "^9.4.2",
    "firebase-jest-testing": "0.0.1-beta.3",
    "jest": "^26.6.3",
    "jest-circus": "^26.6.3",
    "wait-on": "^5.2.1"
  },
  "//comments": {
    "devDependencies": {},
    "engines": [
      "'>=14.3' for 'â€”harmony-top-level-await'",
      "'>=13.2' for ES module support"
    ]
  }
}
